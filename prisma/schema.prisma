// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String    @id @default(uuid())
  username           String    @unique
  bio                String    @default("Hi there, I am new to Chatzz")
  password           String
  email              String    @unique
  image              String?
  uploadedImage      String[]  @default([])
  isVerified         String    @db.Char(1)
  emailVerified      DateTime?
  isProfileCompleted String    @db.Char(1)
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt

  Conversation Conversation[]
  seenMessage  Message[]      @relation("seen")
  Message      Message[]
}

model VerificationToken {
  id    String @id @default(uuid())
  token String
  email String @unique
}

model ResetToken {
  id         String @id @default(uuid())
  resetToken String
  email      String @unique
}

model Conversation {
  id            String    @id @default(uuid())
  createdAt     DateTime  @default(now())
  lastMessageAt DateTime  @default(now())
  name          String?
  isGroup       Boolean?
  userIds       String[]
  users         User[]
  Message       Message[]
}

model Message {
  id             String       @id @default(uuid())
  body           String?
  image          String[]
  createdAt      DateTime     @default(now())
  seenId         String[]
  seen           User[]       @relation("seen")
  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  senderId       String
  sender         User         @relation(fields: [senderId], references: [id])
}

model FollowRequest {
  id         String  @id @default(uuid())
  toId       String
  fromId     String
  isAccepted Boolean @default(false)
}
